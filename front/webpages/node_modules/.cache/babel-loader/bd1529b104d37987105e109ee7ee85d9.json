{"ast":null,"code":"var _jsxFileName = \"/Users/mdhi2/Documents/web/front/webpages/src/COMMON/Common.js\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { Cookies } from 'react-cookie'; // localStorage=개발 때만... 배포=쿠키 인식 추가\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = getCookie('token');\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: getProp => token ? /*#__PURE__*/_jsxDEV(Component, { ...getProp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}; // Cookie Management\n\n_c = PrivateRoute;\nconst cookies = new Cookies();\nexport const getCookie = name => {\n  return cookies.get(name);\n};\nexport const setCookie = (name, value, option) => {\n  return cookies.set(name, value, { ...option\n  });\n};\nexport const removeCookie = (name, option) => {\n  return cookies.remove(name, { ...option\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/mdhi2/Documents/web/front/webpages/src/COMMON/Common.js"],"names":["Route","Redirect","Cookies","PrivateRoute","component","Component","rest","token","getCookie","getProp","cookies","name","get","setCookie","value","option","set","removeCookie","remove"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAiC,cAAjC,C,CAEA;;;AACA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC/D,QAAMC,KAAK,GAAGC,SAAS,CAAC,OAAD,CAAvB;AACA,sBACI,QAAC,KAAD,OAAWF,IAAX;AAAiB,IAAA,MAAM,EAAEG,OAAO,IAAKF,KAAK,gBACtC,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADsC,gBAEtC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CARM,C,CAUP;;KAVaN,Y;AAWb,MAAMO,OAAO,GAAG,IAAIR,OAAJ,EAAhB;AAEA,OAAO,MAAMM,SAAS,GAAIG,IAAD,IAAU;AAC/B,SAAOD,OAAO,CAACE,GAAR,CAAYD,IAAZ,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,SAAS,GAAG,CAACF,IAAD,EAAOG,KAAP,EAAcC,MAAd,KAAyB;AAC9C,SAAOL,OAAO,CAACM,GAAR,CAAYL,IAAZ,EAAiBG,KAAjB,EAAuB,EAAC,GAAGC;AAAJ,GAAvB,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,YAAY,GAAG,CAACN,IAAD,EAAMI,MAAN,KAAiB;AACzC,SAAOL,OAAO,CAACQ,MAAR,CAAeP,IAAf,EAAoB,EAAC,GAAGI;AAAJ,GAApB,CAAP;AACH,CAFM","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport { Cookies }          from 'react-cookie';\n\n// localStorage=개발 때만... 배포=쿠키 인식 추가\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    const token = getCookie('token')\n    return (    \n        <Route {...rest} render={getProp => (token ? \n            <Component {...getProp}/> : \n            <Redirect to='/login'/>)}\n        />\n    )   \n};\n\n// Cookie Management\nconst cookies = new Cookies();\n\nexport const getCookie = (name) => {\n    return cookies.get(name);\n};\n\nexport const setCookie = (name, value, option) => {\n    return cookies.set(name,value,{...option})\n};\n\nexport const removeCookie = (name,option) => {\n    return cookies.remove(name,{...option})\n};"]},"metadata":{},"sourceType":"module"}