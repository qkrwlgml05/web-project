{"ast":null,"code":"var _jsxFileName = \"/Users/mdhi2/Documents/web/front/webpages/src/pages/Dashboard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard_copy = () => {\n  const memo = [{\n    \"seq\": 1,\n    \"user_id\": 'id1',\n    \"title\": 'title1',\n    \"memo\": 'memo1',\n    \"reg_time\": '2021-11-02 13:58:27',\n    \"edit_time\": '2021-11-03 13:58:27'\n  }, {\n    \"seq\": 2,\n    \"user_id\": 'id2',\n    \"title\": 'title2',\n    \"memo\": 'memo2',\n    \"reg_time\": '2021-11-03 13:58:27',\n    \"edit_time\": '2021-11-03 13:58:27'\n  }, {\n    \"seq\": 3,\n    \"user_id\": 'id3',\n    \"title\": 'title3',\n    \"memo\": 'memo3',\n    \"reg_time\": '2021-11-03 13:58:27',\n    \"edit_time\": '2021-11-03 13:58:27'\n  }];\n  const check = [];\n\n  const onMemoModify = (e, item) => {\n    alert(item.seq);\n    check.push(item.seq);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: memo.length > 0 && memo.map((item, idx) => {\n        if (check.includes(item.seq)) {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: item.memo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClink: e => onClickMemo(e, item),\n              children: \"\\uC800\\uC7A5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => onClickCancel(e, item),\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        }\n\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [`[${new Date(item.reg_time).toLocaleString('ko-KR', {\n            timeZone: 'UTC'\n          })}] ${item.title}`, item.memo, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => onMemoModify(e, item),\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onClickMemo = ({\n    e,\n    item\n  }) => {};\n\n  const onClickCancel = ({\n    e,\n    item\n  }) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: memo.length > 0 && memo.map((item, idx) => {\n      if (check.includes(item.seq)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.memo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClink: e => onClickMemo(e, item),\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => onClickCancel(e, item),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [`[${new Date(item.reg_time).toLocaleString('ko-KR', {\n          timeZone: 'UTC'\n        })}] ${item.title}`, item.memo, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => onMemoModify(e, item),\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard_copy;\nexport default Dashboard_copy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard_copy\");","map":{"version":3,"sources":["/Users/mdhi2/Documents/web/front/webpages/src/pages/Dashboard.js"],"names":["React","Link","Dashboard_copy","memo","check","onMemoModify","e","item","alert","seq","push","length","map","idx","includes","title","onClickMemo","onClickCancel","Date","reg_time","toLocaleString","timeZone"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Dashboard_copy = () => {\n  const memo = [\n    {\"seq\" : 1,\n    \"user_id\" : 'id1',\n    \"title\" : 'title1',\n    \"memo\" : 'memo1',\n    \"reg_time\" : '2021-11-02 13:58:27',\n    \"edit_time\" : '2021-11-03 13:58:27'},\n    {\"seq\" : 2,\n    \"user_id\" : 'id2',\n    \"title\" : 'title2',\n    \"memo\" : 'memo2',\n    \"reg_time\" : '2021-11-03 13:58:27',\n    \"edit_time\" : '2021-11-03 13:58:27'},\n    {\"seq\" : 3,\n    \"user_id\" : 'id3',\n    \"title\" : 'title3',\n    \"memo\" : 'memo3',\n    \"reg_time\" : '2021-11-03 13:58:27',\n    \"edit_time\" : '2021-11-03 13:58:27'}\n  ];\n\n  const check = [];\n\n  const onMemoModify = (e, item) => {\n    alert(item.seq);\n    check.push(item.seq);\n    return (\n      <div className=\"sidebar\">\n        {memo.length > 0 && memo.map((item,idx) =>{\n          if (check.includes(item.seq)){\n              <div>\n              <input type=\"text\" value={item.title}/>\n              <input type=\"text\" value={item.memo}/>\n              <button onClink={(e)=>onClickMemo(e,item)}>저장</button>\n              <button onClick={(e)=>onClickCancel(e,item)}>취소</button>\n              </div>\n          }\n            <div>\n            {`[${new Date(item.reg_time).toLocaleString('ko-KR', { timeZone: 'UTC' })}] ${item.title}`}\n            {item.memo}\n            <button onClick={(e)=>onMemoModify(e,item)}>수정</button>\n            </div>\n        })}\n      </div>\n    );\n  }\n\n  const onClickMemo = ({e, item}) => {\n\n  }\n\n  const onClickCancel = ({e, item}) => {\n\n  }\n\n  return (\n    <div className=\"sidebar\">\n      {memo.length > 0 && memo.map((item,idx) =>{\n        if (check.includes(item.seq)){\n          return(\n            <div>\n            <input type=\"text\" value={item.title}/>\n            <input type=\"text\" value={item.memo}/>\n            <button onClink={(e)=>onClickMemo(e,item)}>저장</button>\n            <button onClick={(e)=>onClickCancel(e,item)}>취소</button>\n            </div>);\n        }\n        return(\n          <div>\n          {`[${new Date(item.reg_time).toLocaleString('ko-KR', { timeZone: 'UTC' })}] ${item.title}`}\n          {item.memo}\n          <button onClick={(e)=>onMemoModify(e,item)}>수정</button>\n          </div>);\n      })}\n    </div>\n  );\n}\n\nexport default Dashboard_copy;\n"]},"metadata":{},"sourceType":"module"}